server.port=8080
spring.datasource.url=jdbc:mysql://localhost:3306/fundoo
spring.datasource.username=nandu
spring.datasource.password=admin
spring.jpa.show-sql = true



spring.data.elasticsearch.cluster-nodes=localhost:9300
spring.data.elasticsearch.cluster-name=elasticsearch
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


spring.kafka.bootstrap-servers= localhost:9092
spring.kafka.consumer.group-id= group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379

logging.file.name=log/FundooLogger
logging.level.root=info

amazonProperties.bucketName=fundoonotes-bl
amazonProperties.accessKey=
amazonProperties.secretKey=

 
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.enable =false
spring.mail.test-connection=false